/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ulaval.ui;

import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;
import ulaval.domain.Observer;

/**
 *
 * @author alexis
 */
public class PlayBar extends javax.swing.JPanel implements Observer {

    public MainJFrameView mainJFrame = null;

    InstrumentPanel InstrumentDisplay;

    private final int test = 0;
    
    private boolean isNotify;

    /**
     * Creates new form NavBar
     */
    public PlayBar() {
        initComponents();
        Prec.setVisible(true);
        Prec.setText("Show");
        Avancer.setVisible(false);
//        DefaultComboBoxModel<String> combo = new DefaultComboBoxModel<>();
//        for (MidiInstrument midi : MidiInstrument.values()) {
//            combo.addElement(midi.name());
//        }
//        ToneList.setModel(combo);
    }

    protected void init() {
        if (mainJFrame.ctrl != null) {
            mainJFrame.ctrl.registerScrollerObserver(this);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PartitionViewer = new javax.swing.JTextArea();
        ImportPartition = new javax.swing.JButton();
        PlayPartition = new javax.swing.JButton();
        PausePartition = new javax.swing.JButton();
        StopPartition = new javax.swing.JButton();
        Prec = new javax.swing.JButton();
        Avancer = new javax.swing.JButton();
        mutePartition = new javax.swing.JButton();
        slider = new javax.swing.JSlider();

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("10");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Partition", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 0, 16))); // NOI18N

        PartitionViewer.setColumns(20);
        PartitionViewer.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        PartitionViewer.setRows(5);
        jScrollPane1.setViewportView(PartitionViewer);

        ImportPartition.setText("Import");
        ImportPartition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportPartitionActionPerformed(evt);
            }
        });

        PlayPartition.setText("Play");
        PlayPartition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayPartitionActionPerformed(evt);
            }
        });

        PausePartition.setText("Pause");
        PausePartition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PausePartitionActionPerformed(evt);
            }
        });

        StopPartition.setText("Stop");
        StopPartition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopPartitionActionPerformed(evt);
            }
        });

        Prec.setText("<<");
        Prec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrecActionPerformed(evt);
            }
        });

        Avancer.setText(">>");
        Avancer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvancerActionPerformed(evt);
            }
        });

        mutePartition.setText("Mute");
        mutePartition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mutePartitionActionPerformed(evt);
            }
        });

        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });
        slider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                sliderMouseMoved(evt);
            }
        });
        slider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sliderMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(slider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ImportPartition)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Prec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PlayPartition, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mutePartition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PausePartition, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StopPartition, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Avancer, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(ImportPartition)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlayPartition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PausePartition)
                    .addComponent(StopPartition))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Prec)
                    .addComponent(Avancer)
                    .addComponent(mutePartition)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addGap(40, 40, 40)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ImportPartitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportPartitionActionPerformed
        // TODO add your handling code here:

        JFileChooser FileChooser = mainJFrame.getJFileChooser();
        int returnVal = FileChooser.showOpenDialog(mainJFrame);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = FileChooser.getSelectedFile();
            System.out.println("file = " + file.getAbsolutePath());
            if (file.getAbsolutePath().endsWith(".txt")) {
                mainJFrame.ctrl.importPartition(file.getAbsoluteFile().getAbsolutePath());

                if (mainJFrame.ctrl.getPartition().length() > 0) {

                    PartitionViewer.setText(mainJFrame.ctrl.getPartition());

                }

            }
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_ImportPartitionActionPerformed

    private void PlayPartitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayPartitionActionPerformed
        // TODO add your handling code here:
        InstrumentDisplay.repaint();
        mainJFrame.ctrl.playPartition();

    }//GEN-LAST:event_PlayPartitionActionPerformed

    private void StopPartitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopPartitionActionPerformed
        // TODO add your handling code here:
        mainJFrame.ctrl.stopPartition();
    }//GEN-LAST:event_StopPartitionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int keyId = Integer.parseInt(jButton1.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton1.setForeground(Color.yellow);
                jButton1.repaint();
                break;

            case 1:
                jButton1.setForeground(Color.green);
                jButton1.repaint();
                break;

            case 2:
                jButton1.setForeground(Color.red);
                jButton1.repaint();
                break;

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        int keyId = Integer.parseInt(jButton10.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton10.setForeground(Color.yellow);
                jButton10.repaint();
                break;

            case 1:
                jButton10.setForeground(Color.green);
                jButton10.repaint();
                break;

            case 2:
                jButton10.setForeground(Color.red);
                jButton10.repaint();
                break;

        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int keyId = Integer.parseInt(jButton2.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton2.setForeground(Color.yellow);
                jButton2.repaint();
                break;

            case 1:
                jButton2.setForeground(Color.green);
                jButton2.repaint();
                break;

            case 2:
                jButton2.setForeground(Color.red);
                jButton2.repaint();
                break;

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int keyId = Integer.parseInt(jButton3.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton3.setForeground(Color.yellow);
                jButton3.repaint();
                break;

            case 1:
                jButton3.setForeground(Color.green);
                jButton3.repaint();
                break;

            case 2:
                jButton3.setForeground(Color.red);
                jButton3.repaint();
                break;

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int keyId = Integer.parseInt(jButton4.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton4.setForeground(Color.yellow);
                jButton4.repaint();
                break;

            case 1:
                jButton4.setForeground(Color.green);
                jButton4.repaint();
                break;

            case 2:
                jButton4.setForeground(Color.red);
                jButton4.repaint();
                break;

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int keyId = Integer.parseInt(jButton5.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton5.setForeground(Color.yellow);
                jButton5.repaint();
                break;

            case 1:
                jButton5.setForeground(Color.green);
                jButton5.repaint();
                break;

            case 2:
                jButton5.setForeground(Color.red);
                jButton5.repaint();
                break;

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int keyId = Integer.parseInt(jButton6.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton6.setForeground(Color.yellow);
                jButton6.repaint();
                break;

            case 1:
                jButton6.setForeground(Color.green);
                jButton6.repaint();
                break;

            case 2:
                jButton6.setForeground(Color.red);
                jButton6.repaint();
                break;

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int keyId = Integer.parseInt(jButton7.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton7.setForeground(Color.yellow);
                jButton7.repaint();
                break;

            case 1:
                jButton7.setForeground(Color.green);
                jButton7.repaint();
                break;

            case 2:
                jButton7.setForeground(Color.red);
                jButton7.repaint();
                break;

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int keyId = Integer.parseInt(jButton8.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton8.setForeground(Color.yellow);
                jButton8.repaint();
                break;

            case 1:
                jButton8.setForeground(Color.green);
                jButton8.repaint();
                break;

            case 2:
                jButton8.setForeground(Color.red);
                jButton8.repaint();
                break;

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int keyId = Integer.parseInt(jButton9.getText());

        mainJFrame.ctrl.liveLoop(keyId);

        switch (mainJFrame.ctrl.getState(keyId)) {

            case 0:
                jButton9.setForeground(Color.yellow);
                jButton9.repaint();
                break;

            case 1:
                jButton9.setForeground(Color.green);
                jButton9.repaint();
                break;

            case 2:
                jButton9.setForeground(Color.red);
                jButton9.repaint();
                break;

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void mutePartitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mutePartitionActionPerformed
        // TODO add your handling code here:
        mainJFrame.ctrl.mutePartition();
        if ("Mute".equals(mutePartition.getText())) {
            mutePartition.setText("Unmute");
        } else {
            mutePartition.setText("Mute");
        }
    }//GEN-LAST:event_mutePartitionActionPerformed

    private void PrecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrecActionPerformed
        // TODO add your handling code here:
        mainJFrame.ctrl.showTonesInPartition();
    }//GEN-LAST:event_PrecActionPerformed

    private void AvancerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvancerActionPerformed
        // TODO add your handling code here:
        mainJFrame.ctrl.showTonesInPartition();

    }//GEN-LAST:event_AvancerActionPerformed

    private void PausePartitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PausePartitionActionPerformed
        // TODO add your handling code here:
        mainJFrame.ctrl.pausePartition();
    }//GEN-LAST:event_PausePartitionActionPerformed

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        // TODO add your handling code here:

        if (!isNotify) 
        {
            //System.out.println("ulaval.ui.PlayBar.sliderStateChanged() " + slider.getValue());
            mainJFrame.ctrl.setTimePartition(slider.getValue());
            //isNotify = true;
        }

    }//GEN-LAST:event_sliderStateChanged

    private void sliderMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sliderMouseMoved
        // TODO add your handling code here:

    }//GEN-LAST:event_sliderMouseMoved

    private void sliderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sliderMousePressed
        // TODO add your handling code here:
        isNotify = false;
    }//GEN-LAST:event_sliderMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Avancer;
    private javax.swing.JButton ImportPartition;
    private javax.swing.JTextArea PartitionViewer;
    private javax.swing.JButton PausePartition;
    private javax.swing.JButton PlayPartition;
    private javax.swing.JButton Prec;
    private javax.swing.JButton StopPartition;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mutePartition;
    private javax.swing.JSlider slider;
    // End of variables declaration//GEN-END:variables

    @Override
    public void notifyUpdated() {
        isNotify = true;
        int pourcentageValue = mainJFrame.ctrl.getSliderValue();
        //System.out.println("%%%%%% " + pourcentageValue);
        this.slider.setValue(pourcentageValue);
    }

    void updateButton(int keyId) {

        switch (keyId) {
            case 10:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton10.setForeground(Color.yellow);
                        jButton10.repaint();
                        break;

                    case 1:
                        jButton10.setForeground(Color.green);
                        jButton10.repaint();
                        break;

                    case 2:
                        jButton10.setForeground(Color.red);
                        jButton10.repaint();
                        break;

                }

                break;
            case 1:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton1.setForeground(Color.yellow);
                        jButton1.repaint();
                        break;

                    case 1:
                        jButton1.setForeground(Color.green);
                        jButton1.repaint();
                        break;

                    case 2:
                        jButton1.setForeground(Color.red);
                        jButton1.repaint();
                        break;

                }
                break;
            case 2:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton2.setForeground(Color.yellow);
                        jButton2.repaint();
                        break;

                    case 1:
                        jButton2.setForeground(Color.green);
                        jButton2.repaint();
                        break;

                    case 2:
                        jButton2.setForeground(Color.red);
                        jButton2.repaint();
                        break;

                }
                break;
            case 3:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton3.setForeground(Color.yellow);
                        jButton3.repaint();
                        break;

                    case 1:
                        jButton3.setForeground(Color.green);
                        jButton3.repaint();
                        break;

                    case 2:
                        jButton3.setForeground(Color.red);
                        jButton3.repaint();
                        break;

                }
                break;
            case 4:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton4.setForeground(Color.yellow);
                        jButton4.repaint();
                        break;

                    case 1:
                        jButton4.setForeground(Color.green);
                        jButton4.repaint();
                        break;

                    case 2:
                        jButton4.setForeground(Color.red);
                        jButton4.repaint();
                        break;

                }
                break;
            case 5:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton5.setForeground(Color.yellow);
                        jButton5.repaint();
                        break;

                    case 1:
                        jButton5.setForeground(Color.green);
                        jButton5.repaint();
                        break;

                    case 2:
                        jButton5.setForeground(Color.red);
                        jButton5.repaint();
                        break;

                }
                break;
            case 6:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton6.setForeground(Color.yellow);
                        jButton6.repaint();
                        break;

                    case 1:
                        jButton6.setForeground(Color.green);
                        jButton6.repaint();
                        break;

                    case 2:
                        jButton6.setForeground(Color.red);
                        jButton6.repaint();
                        break;

                }
                break;
            case 7:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton7.setForeground(Color.yellow);
                        jButton7.repaint();
                        break;

                    case 1:
                        jButton7.setForeground(Color.green);
                        jButton7.repaint();
                        break;

                    case 2:
                        jButton7.setForeground(Color.red);
                        jButton7.repaint();
                        break;

                }
                break;
            case 8:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton8.setForeground(Color.yellow);
                        jButton8.repaint();
                        break;

                    case 1:
                        jButton8.setForeground(Color.green);
                        jButton8.repaint();
                        break;

                    case 2:
                        jButton8.setForeground(Color.red);
                        jButton8.repaint();
                        break;

                }
                break;
            case 9:
                switch (mainJFrame.ctrl.getState(keyId)) {

                    case 0:
                        jButton9.setForeground(Color.yellow);
                        jButton9.repaint();
                        break;

                    case 1:
                        jButton9.setForeground(Color.green);
                        jButton9.repaint();
                        break;

                    case 2:
                        jButton9.setForeground(Color.red);
                        jButton9.repaint();
                        break;

                }
                break;

        }

    }

}
